@startuml
class com.example.chatapp_ui.controllers.RegisterController {
- TextField username
- PasswordField password
- Label errorIGuess
+ void MainScreen(ActionEvent)
+ void register(ActionEvent)
}
class com.example.chatapp_ui.Client {
- String name
- Socket client
- BufferedReader clientInput
- PrintWriter clientOutput
- ChattingController controller
- boolean shutDown
+ <<Create>> Client(String,ChattingController)
+ void run()
+ void shutdown()
}
class com.example.chatapp_ui.Client.InputHandler {
+ void sendMessage(String)
+ void run()
}
class com.example.chatapp_ui.Main {
+ {static} void main(String[])
}
class com.example.chatapp_ui.Server {
- ArrayList<ConnectionHandler> serverConnections
- ServerSocket serverHost
- boolean shutDown
- ExecutorService serverThreadPool
+ <<Create>> Server()
+ {static} void main(String[])
+ void run()
+ void sendToAllUsers(String)
+ void shutdown()
}
class com.example.chatapp_ui.Server.ConnectionHandler {
- Socket client
~ DateTimeFormatter dtf
~ LocalDateTime now
~ FileWriter fileWriter
~ BufferedWriter bufferedWriter
- BufferedReader inputReader
- PrintWriter outputReader
+ <<Create>> ConnectionHandler(Socket)
+ void run()
+ void sendMessage(String)
+ void shutdown()
}
interface com.example.chatapp_ui.RegisterControllerInterface {
+ void register(ActionEvent)
+ void MainScreen(ActionEvent)
}
class com.example.chatapp_ui.CredentialsTooShortException {
+ <<Create>> CredentialsTooShortException(String)
}
class com.example.chatapp_ui.controllers.ChattingController {
- TextField message
- TextArea chat
- Client client
- Client.InputHandler inputHandler
+ void sendMessage(ActionEvent)
+ void closeWindow(ActionEvent)
+ void appendText(String)
+ void start(String)
~ void enterPress(KeyEvent)
}
class com.example.chatapp_ui.controllers.LoginController {
+ TextField nickname
- TextField username
- PasswordField password
- Label errorIGuess
+ TextField getNickname()
+ void nicknamePrompt(ActionEvent)
+ void show(ActionEvent)
+ void login(ActionEvent)
}
class com.example.chatapp_ui.DBHandler {
~ {static} Connection connection
~ {static} String DBName
~ {static} String DBurl
~ {static} String DBusername
~ {static} String DBpassword
+ boolean match
+ <<Create>> DBHandler()
+ boolean logIn(String,String)
+ boolean register(String,String)
}
class com.example.chatapp_ui.ChatAppEXE {
+ void start(Stage)
+ {static} void main(String[])
}
class com.example.chatapp_ui.controllers.MainController {
+ void registerScene(ActionEvent)
+ void loginScene(ActionEvent)
}
interface com.example.chatapp_ui.LoginControllerInterface {
+ void nicknamePrompt(ActionEvent)
+ void show(ActionEvent)
+ void login(ActionEvent)
}
class com.example.chatapp_ui.ExistingUsernameException {
+ <<Create>> ExistingUsernameException(String)
}
class com.example.chatapp_ui.UnmatchingCredentialsException {
+ <<Create>> UnmatchingCredentialsException(String)
}


com.example.chatapp_ui.RegisterControllerInterface <|.. com.example.chatapp_ui.controllers.RegisterController
com.example.chatapp_ui.Thread <|-- com.example.chatapp_ui.Client
com.example.chatapp_ui.Client +.. com.example.chatapp_ui.Client.InputHandler
com.example.chatapp_ui.Runnable <|.. com.example.chatapp_ui.Client.InputHandler
com.example.chatapp_ui.Runnable <|.. com.example.chatapp_ui.Server
com.example.chatapp_ui.Server +.. com.example.chatapp_ui.Server.ConnectionHandler
com.example.chatapp_ui.Runnable <|.. com.example.chatapp_ui.Server.ConnectionHandler
com.example.chatapp_ui.Exception <|-- com.example.chatapp_ui.CredentialsTooShortException
com.example.chatapp_ui.LoginControllerInterface <|.. com.example.chatapp_ui.controllers.LoginController
javafx.application.Application <|-- com.example.chatapp_ui.ChatAppEXE
com.example.chatapp_ui.Exception <|-- com.example.chatapp_ui.ExistingUsernameException
com.example.chatapp_ui.Exception <|-- com.example.chatapp_ui.UnmatchingCredentialsException
@enduml